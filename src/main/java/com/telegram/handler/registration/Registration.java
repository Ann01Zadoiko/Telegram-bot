package com.telegram.handler.registration;

import com.telegram.bot.TelegramBot;
import com.telegram.buttons.inline.InlineKeyboardSettingsButton;
import com.telegram.constant.EnumNotification;
import com.telegram.constant.Steps;
import com.telegram.constant.UserStatus;
import com.telegram.notification.Notification;
import com.telegram.notification.NotificationService;
import com.telegram.user.StatusEnum;
import com.telegram.user.User;
import com.telegram.user.UserService;
import lombok.RequiredArgsConstructor;
import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.EnumSet;
import java.util.Set;

@Service
@RequiredArgsConstructor
@Slf4j
public class Registration {

    private final UserStateManager stateManager;
    private final UserService userService;
    private final NotificationService notificationService;

    // --- –ù–ê–ß–ê–õ–û –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ---
    @SneakyThrows
    public void startRegistration(Long chatId, TelegramBot bot) {
        log.info("üöÄ –ù–∞—á–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è chatId: {}", chatId);
        stateManager.startRegistration(chatId, RegistrationType.START, 1);
        bot.sendMessage(chatId, "üìù " + Steps.START);
    }

    // --- –û–ë–†–ê–ë–û–¢–ö–ê –≠–¢–ê–ü–û–í –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ---
    @SneakyThrows
    public void processRegistrationStep(Long chatId, String messageText, TelegramBot bot) {
        log.info("üîπ processRegistrationStep() –≤—ã–∑–≤–∞–Ω –¥–ª—è chatId: {}, step: {}", chatId, stateManager.getUserRegistration(chatId).getStep());

        UserRegistration userReg = stateManager.getUserRegistration(chatId);
        User user = userService.getByChatId(chatId);

        switch (userReg.getStep()) {
            case 1:
                log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏–º—è: {}", messageText);

                if (user == null) {
                    log.info("üîπ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
                    user = new User();
                    user.setChatId(chatId);
                    user.setAtWork((byte) 0);
                    user.setStatusEnum(StatusEnum.NOTHING);

                    userService.save(user);
                    log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ: {}", user);

                    Notification notification = new Notification();
                    notification.setTurnOn(true);
                    notification.setTimeOfNotification(EnumNotification.EIGHT_FIFTY_FIVE.getTime());
                    notification.setUser(user);
                    notificationService.save(notification);
                }

                userReg.setFullName(messageText);
                userReg.nextStep();

                log.info("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ chatId: {}, –Ω–æ–≤—ã–π step: {}", chatId, userReg.getStep());
                stateManager.updateUserRegistration(chatId, userReg);

                bot.sendMessage(chatId, "üìû " + Steps.STEP_1);
                log.info("üì© –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —à–∞–≥–µ 2.");
                break;
            case 2:
                if (user == null) {
                    log.error("‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å chatId={} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!", chatId);
                    bot.sendMessage(chatId, "‚ö† –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.");
                    return;
                }

                log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {}", messageText);

                user.setPhoneNumber(messageText);
                userService.save(user);

                userReg.setPhoneNumber(messageText);
                userReg.nextStep();
                stateManager.updateUserRegistration(chatId, userReg);

                Set<UserStatus> enumSet = EnumSet.allOf(UserStatus.class);
                enumSet.remove(UserStatus.BACK);
                InlineKeyboardSettingsButton<UserStatus> button = new InlineKeyboardSettingsButton<>();
                bot.executeSetting(chatId, button.getButtonsDifferentCount(enumSet), Steps.STEP_2);

                break;
        }
    }
}
